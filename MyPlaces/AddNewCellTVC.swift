//
//  AddNewCellTVC.swift
//  MyPlaces
//
//  Created by –í–ª–∞–¥–∏–º–∏—Ä on 27.07.2021.
//

import UIKit

class AddNewCellTVC: UITableViewController, UITextViewDelegate {
    
    
    @IBOutlet weak var nameTF: UITextField!
    @IBOutlet weak var locationTF: UITextField!
    @IBOutlet weak var commentTextView: UITextView!
    var placeholderLabel : UILabel!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        labelLikePlaceholderForComment()
        /* func gestureRecognizer () {
        let tapForHideKeyboard = UITapGestureRecognizer(target: tableView, action: #selector(UIView.endEditing))
        view.addGestureRecognizer(tapForHideKeyboard)
        } */
        
    }
    
    // –û—Ç–≤–µ—á–∞—é—Ç –∑–∞ –ø–ª—ç–π—Å—Ö–æ–ª–¥–µ—Ä –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è UITextView
    fileprivate func labelLikePlaceholderForComment () {
        commentTextView.delegate = self
        placeholderLabel = UILabel()
        placeholderLabel.text = "–ï—Å–ª–∏ –µ—Å—Ç—å –∂–µ–ª–∞–Ω–∏–µ, –æ—Å—Ç–∞–≤—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
        placeholderLabel.font = UIFont.systemFont(ofSize: (commentTextView.font?.pointSize)!)
        placeholderLabel.sizeToFit()
        commentTextView.addSubview(placeholderLabel)
        placeholderLabel.frame.origin = CGPoint(x: 5, y: (commentTextView.font?.pointSize)! / 2)
        placeholderLabel.textColor = UIColor.lightGray
        placeholderLabel.isHidden = !commentTextView.text.isEmpty
    }
    func textViewDidChange(_ textView: UITextView) {
        placeholderLabel.isHidden = !commentTextView.text.isEmpty
    }
    

    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        if indexPath.row == 0 {
            let actionSheet = UIAlertController(title: nil,
                                                message: nil,
                                                preferredStyle: .actionSheet)
            let cameraAction = UIAlertAction(title: "–ö–∞–º–µ—Ä–∞ üì∑", style: .default) { _ in
                self.chooseImagePicker(source: .camera)
            }
            let photoAction = UIAlertAction(title: "–§–æ—Ç–æ üåÑ", style: .default) { _ in
                self.chooseImagePicker(source: .photoLibrary)
            }
//          let searchInternetAction = UIAlertAction(title: "–§–æ—Ç–æ üåÑ", style: .default) { _ in
//              // TODO: –ø–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ. –í–æ–∑–º–æ–∂–Ω–æ –æ—Ç–∫–∞–∂—É—Å—å –æ—Ç —ç—Ç–æ–π –∏–¥–µ–∏.
//          }
            let cancelAction = UIAlertAction(title: "–û—Ç–º–µ–Ω–∞", style: .cancel)
            
            actionSheet.addAction(cameraAction)
            actionSheet.addAction(photoAction)
            actionSheet.addAction(cancelAction)
            present(actionSheet, animated: true)
    } else {
            view.endEditing(true)     // –°–∫—Ä—ã—Ç–∏–µ –∫–ª–∞–∏–≤–∞—Ç—É—Ä—ã –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ —ç–∫—Ä–∞–Ω (–∞ –∏–º–µ–Ω–Ω–æ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —è—á–µ–π–∫–∏)
        }
    }
}

// MARK: TFDelegate
extension AddNewCellTVC: UITextFieldDelegate {
    //–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É TF –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ Done
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        switch textField {
            case nameTF: locationTF.becomeFirstResponder()
                return true
            case locationTF: commentTextView.becomeFirstResponder()
                return true
            default: textField.resignFirstResponder()
                return true
        }
    }
}


// MARK: –†–∞–±–æ—Ç–∞ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
extension AddNewCellTVC {
    func chooseImagePicker(source: UIImagePickerController.SourceType) {
        if UIImagePickerController.isSourceTypeAvailable(source) {
            let selectedPicker = UIImagePickerController()
            selectedPicker.sourceType = source
            selectedPicker.allowsEditing = true
            present(selectedPicker, animated: true)
        }
    }
}

